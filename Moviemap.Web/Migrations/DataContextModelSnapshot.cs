// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moviemap.Web.Data;

namespace Moviemap.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Moviemap.Web.Data.Entities.ChairEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChairType")
                        .IsRequired();

                    b.Property<int>("ColumnLocation");

                    b.Property<string>("Identification")
                        .IsRequired();

                    b.Property<int?>("RoomId");

                    b.Property<int>("RowLocation");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Chairs");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.CinemaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.HourEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("MovieId");

                    b.Property<int?>("RoomId");

                    b.Property<DateTime>("StartDate");

                    b.Property<decimal>("TicketPrice");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoomId");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Duration");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.ReservationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MovieId");

                    b.Property<string>("QrCode");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.RoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CinemaId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.ChairEntity", b =>
                {
                    b.HasOne("Moviemap.Web.Data.Entities.RoomEntity", "Room")
                        .WithMany("Chairs")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.HourEntity", b =>
                {
                    b.HasOne("Moviemap.Web.Data.Entities.MovieEntity", "Movie")
                        .WithMany("Hours")
                        .HasForeignKey("MovieId");

                    b.HasOne("Moviemap.Web.Data.Entities.RoomEntity", "Room")
                        .WithMany("Hours")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.ReservationEntity", b =>
                {
                    b.HasOne("Moviemap.Web.Data.Entities.MovieEntity", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("Moviemap.Web.Data.Entities.RoomEntity", b =>
                {
                    b.HasOne("Moviemap.Web.Data.Entities.CinemaEntity", "Cinema")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemaId");
                });
#pragma warning restore 612, 618
        }
    }
}
